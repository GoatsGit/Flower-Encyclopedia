# 13주차 실습한 내용

## 실습명: 학습이 잘 되었다면 추가할 종류의 꽃 데이터 수집 후 학습 진행 및 플러스 친구의 응답 관련 코드 구현

### 실습절차
```
1. 추가할 종류의 꽃 데이터 수집
2. 학습 진행 및 테스트
3. Python-Django로 응답 관련 코드 구현
```

### 실습결과
```
Python-Django를 이용한 서버 구축에 있어서 사진을 전송 받았을 때의 응답 관련 코드를 아직 구현하지 못 하였음
아래의 사진과 같이 사진을 전송받으면 핑크색 글씨로 터미널에 출력되는데 이는 응답 코드가 작성되지 않아서임
```
![kakaotalk_20181118_225851474](https://user-images.githubusercontent.com/43947747/48673762-28f49f80-eb88-11e8-87e4-7e7432e153f8.jpg)
```
아래의 사진에 작성된 코드는 카카오톡 API Document를 참조하여 혼자 작성해본 것인데 작동하지 않았음
```
![api document](https://user-images.githubusercontent.com/43947747/48673779-678a5a00-eb88-11e8-9bef-8c1543ec4ee3.PNG)
![kakaotalk_20181118_225846905](https://user-images.githubusercontent.com/43947747/48673770-4b86b880-eb88-11e8-9fc7-f09537648262.jpg)

### 소감 및 질문
```
라즈베리파이에서 설치를 완료한 후 나만의 데이터로 재학습을 진행하던 도중 라즈베리파이가 뻗어버리는 현상을 2번이나 겪음으로써
컴퓨터에서 학습시키고, 그 데이터를 라즈베리파이로 옮겨서 추론만 실행되도 된다는 점이 생각나 컴퓨터에 Tensorflow를 설치하게
되었다. 과거 한 번 다뤄본 적 있는 Inception V3 모델이라 설치부터 사용까지 크게 난항을 겪으리라 생각하지 않았지만 설치부터
실행까지 어려운 부분이 많았다. Tensorflow를 실행할때 CPU보다 그래픽 가속 보드(GPU)를 이용한 처리 속도가 훨씬 빠르므로 이를
지원해주는 ToolKit인 CUDA와 CUDNN을 설치할 때 CUDA는 최신 버전으로 설치하였고, Python 역시 최신 버전인 3.7.1버전을
설치하였는데, 현재 Tensorflow는 이들의 최신 버전들을 지원하지 않았다. 따라서 Legacy 버전으로 설치하였다. Tensorflow의 설치는
크게 어려운 점이 없는데, cmd창에서 python -m pip install --upgrade pip 명령을 통해 pip의 버전을 업그레이드 한 후
pip install tensorflow-gpu 명령을 실행해 gpu를 사용하는 tensorflow를 설치하였고, 설치가 완료된 후 cmd 창에 python 을 입력
후 python을 실행시킨 뒤 import tensorflow as tf 를 입력하여 import error가 발생하지 않아 tensorflow의 설치가 완료되었음을
확인하였다. 이후 학습을 진행하면서 오류가 발생하였는데, tensorflow에서 배포하는 재학습에 관련된 소스 코드 파일이 업데이트 되며
변경된 내용으로 인해 발생된다는 것을 알게 되어 재학습 관련 소스 코드와 추론 관련 소스 코드가 서로 호환되는 소스를 찾느라 다소
힘든 부분이 있었다. 항상 최신버전이라고 해서 사용하는 것이 아닌, 호환 여부부터 확인해야 한다는 점을 배울 수 있었던 실습이였다.
```

### 관련링크

